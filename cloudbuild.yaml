# Cloud Build configuration that mimics Render's deployment process
steps:
  # Build the container image with secrets retrieved directly as build args
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Get all secrets and use them directly as build args
        echo "ðŸ”¨ Building container image..."
        
        docker build \
          --build-arg DATABASE_URL="$$(gcloud secrets versions access latest --secret="database-url")" \
          --build-arg NEXTAUTH_SECRET="$$(gcloud secrets versions access latest --secret="nextauth-secret")" \
          --build-arg NEXTAUTH_URL="$$(gcloud secrets versions access latest --secret="nextauth-url")" \
          --build-arg GOOGLE_CLIENT_ID="$$(gcloud secrets versions access latest --secret="google-client-id")" \
          --build-arg GOOGLE_CLIENT_SECRET="$$(gcloud secrets versions access latest --secret="google-client-secret")" \
          --build-arg CLOUDINARY_API_KEY="$$(gcloud secrets versions access latest --secret="cloudinary-api-key")" \
          --build-arg CLOUDINARY_API_SECRET="$$(gcloud secrets versions access latest --secret="cloudinary-api-secret")" \
          --build-arg CLOUDINARY_NAME="$$(gcloud secrets versions access latest --secret="cloudinary-name")" \
          --build-arg MICROSOFT_ENTRA_CLIENT_ID="$$(gcloud secrets versions access latest --secret="microsoft-entra-client-id")" \
          --build-arg MICROSOFT_ENTRA_CLIENT_SECRET="$$(gcloud secrets versions access latest --secret="microsoft-entra-client-secret")" \
          --build-arg MICROSOFT_ENTRA_ISSUER="$$(gcloud secrets versions access latest --secret="microsoft-entra-issuer")" \
          --build-arg NODE_ENV="production" \
          -t us-docker.pkg.dev/$PROJECT_ID/gcr.io/workplacify-app:build-$BUILD_ID \
          .

  # Push the container image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-docker.pkg.dev/$PROJECT_ID/gcr.io/workplacify-app:build-$BUILD_ID']
  
  # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'workplacify-app'
      - '--image'
      - 'us-docker.pkg.dev/$PROJECT_ID/gcr.io/workplacify-app:build-$BUILD_ID'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '3000'
      - '--cpu'
      - '1'
      - '--memory'
      - '512Mi'
      - '--min-instances'
      - '0'
      - '--max-instances'
      - '10'
      - '--concurrency'
      - '80'
      - '--timeout'
      - '300'
      - '--set-env-vars'
      - 'NODE_ENV=production'
      - '--set-secrets'
      - 'DATABASE_URL=database-url:latest,NEXTAUTH_SECRET=nextauth-secret:latest,NEXTAUTH_URL=nextauth-url:latest,GOOGLE_CLIENT_ID=google-client-id:latest,GOOGLE_CLIENT_SECRET=google-client-secret:latest,CLOUDINARY_API_SECRET=cloudinary-api-secret:latest,CLOUDINARY_API_KEY=cloudinary-api-key:latest,CLOUDINARY_NAME=cloudinary-name:latest,MICROSOFT_ENTRA_CLIENT_ID=microsoft-entra-client-id:latest,MICROSOFT_ENTRA_CLIENT_SECRET=microsoft-entra-client-secret:latest,MICROSOFT_ENTRA_ISSUER=microsoft-entra-issuer:latest,ADMIN_EMAILS=admin-emails:latest'
      - '--service-account'
      - 'workplacify-app-sa@$PROJECT_ID.iam.gserviceaccount.com'
      - '--add-cloudsql-instances'
      - '$PROJECT_ID:us-central1:workplacify-db'

images:
  - 'us-docker.pkg.dev/$PROJECT_ID/gcr.io/workplacify-app:build-$BUILD_ID'

options:
  logging: CLOUD_LOGGING_ONLY