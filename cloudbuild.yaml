# Cloud Build configuration for automated deployment
steps:
  # Generate a unique tag
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Use build ID as tag if SHORT_SHA is not available
        if [ -z "$SHORT_SHA" ]; then
          echo "latest-$BUILD_ID" > /workspace/image_tag
        else
          echo "$SHORT_SHA" > /workspace/image_tag
        fi
        echo "Using image tag: $(cat /workspace/image_tag)"

  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        IMAGE_TAG=$(cat /workspace/image_tag)
        docker build -t gcr.io/$PROJECT_ID/workplacify-app:$IMAGE_TAG .
  
  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        IMAGE_TAG=$(cat /workspace/image_tag)
        docker push gcr.io/$PROJECT_ID/workplacify-app:$IMAGE_TAG
  
  # Run database migrations
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Get database connection string from Secret Manager
        DATABASE_URL=$$(gcloud secrets versions access latest --secret="database-url")
        
        # Run Prisma migrations using Cloud Run job
        IMAGE_TAG=$$(cat /workspace/image_tag)
        
        gcloud run jobs replace --region=us-central1 --image=gcr.io/$PROJECT_ID/workplacify-app:$$IMAGE_TAG \
          --set-env-vars="DATABASE_URL=$$DATABASE_URL" \
          --task-timeout=600 \
          --max-retries=3 \
          --parallelism=1 \
          --task-count=1 \
          --cpu=1 \
          --memory=512Mi \
          migration-job || \
        gcloud run jobs create migration-job --region=us-central1 --image=gcr.io/$PROJECT_ID/workplacify-app:$$IMAGE_TAG \
          --set-env-vars="DATABASE_URL=$$DATABASE_URL" \
          --task-timeout=600 \
          --max-retries=3 \
          --parallelism=1 \
          --task-count=1 \
          --cpu=1 \
          --memory=512Mi
        
        gcloud run jobs execute migration-job --region=us-central1 --wait \
          --overrides='{"spec":{"template":{"spec":{"template":{"spec":{"containers":[{"name":"migration-job","command":["sh","-c","npx prisma migrate deploy && npx tsx prisma/seed-production.ts"]}]}}}}}}'
  
  # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        IMAGE_TAG=$$(cat /workspace/image_tag)
        gcloud run deploy workplacify-app \
          --image=gcr.io/$PROJECT_ID/workplacify-app:$$IMAGE_TAG \
          --region=us-central1 \
          --platform=managed \
          --allow-unauthenticated \
          --port=3000 \
          --cpu=1 \
          --memory=512Mi \
          --min-instances=0 \
          --max-instances=10 \
          --concurrency=80 \
          --timeout=300 \
          --set-env-vars=NODE_ENV=production \
          --set-secrets=DATABASE_URL=database-url:latest,NEXTAUTH_SECRET=nextauth-secret:latest,GOOGLE_CLIENT_ID=google-client-id:latest,GOOGLE_CLIENT_SECRET=google-client-secret:latest,CLOUDINARY_API_SECRET=cloudinary-api-secret:latest,CLOUDINARY_API_KEY=cloudinary-api-key:latest,CLOUDINARY_NAME=cloudinary-name:latest,MICROSOFT_ENTRA_CLIENT_ID=microsoft-entra-client-id:latest,MICROSOFT_ENTRA_CLIENT_SECRET=microsoft-entra-client-secret:latest,MICROSOFT_ENTRA_ISSUER=microsoft-entra-issuer:latest,ADMIN_EMAILS=admin-emails:latest \
          --service-account=workplacify-app-sa@$PROJECT_ID.iam.gserviceaccount.com \
          --add-cloudsql-instances=$PROJECT_ID:us-central1:workplacify-db

# Images will be tagged dynamically

options:
  logging: CLOUD_LOGGING_ONLY